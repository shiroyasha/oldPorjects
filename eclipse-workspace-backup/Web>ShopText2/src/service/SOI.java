
package service;

import java.util.List;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.1.6
 * Generated source version: 2.1
 * 
 */
@WebService(name = "SOI", targetNamespace = "http://service/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface SOI {


    /**
     * 
     * @param arg3
     * @param arg2
     * @param arg1
     * @param arg0
     * @return
     *     returns int
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "register", targetNamespace = "http://service/", className = "service.Register")
    @ResponseWrapper(localName = "registerResponse", targetNamespace = "http://service/", className = "service.RegisterResponse")
    public int register(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        String arg1,
        @WebParam(name = "arg2", targetNamespace = "")
        String arg2,
        @WebParam(name = "arg3", targetNamespace = "")
        int arg3);

    /**
     * 
     * @param arg0
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "leave", targetNamespace = "http://service/", className = "service.Leave")
    @ResponseWrapper(localName = "leaveResponse", targetNamespace = "http://service/", className = "service.LeaveResponse")
    public boolean leave(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0);

    /**
     * 
     * @param arg1
     * @param arg0
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "login", targetNamespace = "http://service/", className = "service.Login")
    @ResponseWrapper(localName = "loginResponse", targetNamespace = "http://service/", className = "service.LoginResponse")
    public String login(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        String arg1);

    /**
     * 
     * @param arg0
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "logout", targetNamespace = "http://service/", className = "service.Logout")
    @ResponseWrapper(localName = "logoutResponse", targetNamespace = "http://service/", className = "service.LogoutResponse")
    public boolean logout(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0);

    /**
     * 
     * @param arg0
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "loggedIn", targetNamespace = "http://service/", className = "service.LoggedIn")
    @ResponseWrapper(localName = "loggedInResponse", targetNamespace = "http://service/", className = "service.LoggedInResponse")
    public boolean loggedIn(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0);

    /**
     * 
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "testConnection", targetNamespace = "http://service/", className = "service.TestConnection")
    @ResponseWrapper(localName = "testConnectionResponse", targetNamespace = "http://service/", className = "service.TestConnectionResponse")
    public String testConnection();

    /**
     * 
     * @param arg0
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "validUsername", targetNamespace = "http://service/", className = "service.ValidUsername")
    @ResponseWrapper(localName = "validUsernameResponse", targetNamespace = "http://service/", className = "service.ValidUsernameResponse")
    public boolean validUsername(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0);

    /**
     * 
     * @param arg0
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "validPassword", targetNamespace = "http://service/", className = "service.ValidPassword")
    @ResponseWrapper(localName = "validPasswordResponse", targetNamespace = "http://service/", className = "service.ValidPasswordResponse")
    public boolean validPassword(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0);

    /**
     * 
     * @param arg1
     * @param arg0
     * @return
     *     returns java.util.List<java.lang.String>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getItems", targetNamespace = "http://service/", className = "service.GetItems")
    @ResponseWrapper(localName = "getItemsResponse", targetNamespace = "http://service/", className = "service.GetItemsResponse")
    public List<String> getItems(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        boolean arg1);

    /**
     * 
     * @param arg0
     * @return
     *     returns double
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getCurrentCost", targetNamespace = "http://service/", className = "service.GetCurrentCost")
    @ResponseWrapper(localName = "getCurrentCostResponse", targetNamespace = "http://service/", className = "service.GetCurrentCostResponse")
    public double getCurrentCost(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0);

    /**
     * 
     * @param arg1
     * @param arg0
     * @return
     *     returns double
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getCurrentCostPlus", targetNamespace = "http://service/", className = "service.GetCurrentCostPlus")
    @ResponseWrapper(localName = "getCurrentCostPlusResponse", targetNamespace = "http://service/", className = "service.GetCurrentCostPlusResponse")
    public double getCurrentCostPlus(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        int arg1);

    /**
     * 
     * @param arg1
     * @param arg0
     * @return
     *     returns double
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "addToCart", targetNamespace = "http://service/", className = "service.AddToCart")
    @ResponseWrapper(localName = "addToCartResponse", targetNamespace = "http://service/", className = "service.AddToCartResponse")
    public double addToCart(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        String arg1);

    /**
     * 
     * @param arg1
     * @param arg0
     * @return
     *     returns double
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "removeFromCart", targetNamespace = "http://service/", className = "service.RemoveFromCart")
    @ResponseWrapper(localName = "removeFromCartResponse", targetNamespace = "http://service/", className = "service.RemoveFromCartResponse")
    public double removeFromCart(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        String arg1);

    /**
     * 
     * @param arg0
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "checkout", targetNamespace = "http://service/", className = "service.Checkout")
    @ResponseWrapper(localName = "checkoutResponse", targetNamespace = "http://service/", className = "service.CheckoutResponse")
    public boolean checkout(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0);

    /**
     * 
     * @param arg0
     * @return
     *     returns java.util.List<java.lang.String>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getCommentsFor", targetNamespace = "http://service/", className = "service.GetCommentsFor")
    @ResponseWrapper(localName = "getCommentsForResponse", targetNamespace = "http://service/", className = "service.GetCommentsForResponse")
    public List<String> getCommentsFor(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0);

    /**
     * 
     * @param arg2
     * @param arg1
     * @param arg0
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "setCommentFor", targetNamespace = "http://service/", className = "service.SetCommentFor")
    @ResponseWrapper(localName = "setCommentForResponse", targetNamespace = "http://service/", className = "service.SetCommentForResponse")
    public boolean setCommentFor(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        String arg1,
        @WebParam(name = "arg2", targetNamespace = "")
        String arg2);

    /**
     * 
     * @param arg2
     * @param arg1
     * @param arg0
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "setRatingFor", targetNamespace = "http://service/", className = "service.SetRatingFor")
    @ResponseWrapper(localName = "setRatingForResponse", targetNamespace = "http://service/", className = "service.SetRatingForResponse")
    public boolean setRatingFor(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        String arg1,
        @WebParam(name = "arg2", targetNamespace = "")
        int arg2);

    /**
     * 
     * @param arg0
     * @return
     *     returns java.util.List<java.lang.Integer>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getRatingsFor", targetNamespace = "http://service/", className = "service.GetRatingsFor")
    @ResponseWrapper(localName = "getRatingsForResponse", targetNamespace = "http://service/", className = "service.GetRatingsForResponse")
    public List<Integer> getRatingsFor(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0);

    /**
     * 
     * @param arg0
     * @return
     *     returns java.util.List<java.lang.String>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getBuyListFor", targetNamespace = "http://service/", className = "service.GetBuyListFor")
    @ResponseWrapper(localName = "getBuyListForResponse", targetNamespace = "http://service/", className = "service.GetBuyListForResponse")
    public List<String> getBuyListFor(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0);

}
