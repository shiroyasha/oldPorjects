package microfb.client.services;

import java.util.List;

import microfb.shared.IO.AktivnostIO;
import microfb.shared.IO.KorisnikIO;
import microfb.shared.IO.TypeIO;

import com.google.gwt.user.client.rpc.RemoteService;
import com.google.gwt.user.client.rpc.RemoteServiceRelativePath;

@RemoteServiceRelativePath("usersService")
public interface MicroFBService extends RemoteService
{
	String login(String mail, String password, Boolean boolean1);
	void logout( String sessionID ) throws IllegalArgumentException;
	void register( String email, String password, String name, String birthdate, 
            String city, String workplace, String quote, String sex  ) throws Exception;
	
	
	
	KorisnikIO getKorisnik( String sessionID ) throws IllegalArgumentException;
	List<KorisnikIO> getAllKorisnik( String sessionID ) throws IllegalArgumentException;
	List<KorisnikIO> searchForKorisnik( String sessionID, String queryString ) throws IllegalArgumentException;
	
	void updateKorisnik( String sessionID, KorisnikIO korisnik ) throws IllegalArgumentException;
	

	
	List<AktivnostIO> getWallItemsCount(String email, long from, long to) throws IllegalArgumentException;
	List<AktivnostIO> getWallItems(String email, long from, int to ) throws IllegalArgumentException;
	

	
	boolean post( String sessionID, String value, TypeIO tip ) throws IllegalArgumentException;
	boolean updatePost( String sessionID, AktivnostIO aktivnostIO, String value, TypeIO tip ) throws IllegalArgumentException;
	boolean deletePost( String sessionID, AktivnostIO aktivnostIO ) throws IllegalArgumentException;
	
	

	boolean likeEnabled( String sessionID, AktivnostIO aktivnostIO ) throws IllegalArgumentException;
	boolean like( String sessionID, AktivnostIO aktivnostIO ) throws IllegalArgumentException;
	boolean unlike( String sessionID, AktivnostIO aktivnostIO ) throws IllegalArgumentException;
	
}

